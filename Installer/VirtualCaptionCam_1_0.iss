; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

; uncomment this for 32bit installer (comment this for 64bit installer)
;#define MyAppFor32bit

#ifdef MyAppFor32bit
#define MyAppName "VirtualCaptionCam32"
#else
#define MyAppName "VirtualCaptionCam"
#endif

#define MyAppVersion "1.0"
#define MyAppPublisher "mekiku.com"
#define MyAppURL "https://www.mekiku.com/"
#define MyAppExeName "VirtualCaptionCam.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{A2E440A6-D88D-46F5-836C-F27C678EE318}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename={#MyAppName}_{#MyAppVersion}
Compression=lzma
SolidCompression=yes
WizardStyle=modern
SourceDir=.\VirtualCaptionCam
OutputDir=..\Output
InfoAfterFile=usage.txt
MinVersion=10.0.19041
; 64bit installer
#ifndef MyAppFor32bit
ArchitecturesInstallIn64BitMode=x64
ArchitecturesAllowed=x64
#endif

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: ".\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\Microsoft.Web.WebView2.Core.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\Microsoft.Web.WebView2.Wpf.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\NMUniversalVCamFilter_32.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\NMUniversalVCamFilter_64.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\register.bat"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\add_cap.bat"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\unregister.bat"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\VirtualCaptionCam.cfg"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\VirtualCaptionCam.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\usage.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\runtimes\*"; DestDir: "{app}\runtimes"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\{#MyAppName}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autoprograms}\{#MyAppName}\Usage"; Filename: "{app}\usage.txt"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\register.bat"; Flags: runascurrentuser;
Filename: "{app}\add_cap.bat"; Flags: runascurrentuser;

[UninstallRun]
Filename: "{app}\unregister.bat"; RunOnceId: "DelService"; Flags: runascurrentuser;

[Code]
function IfWebView2Available(): boolean;
  var Pv: String;
  var key64: String;
  var key32: String;
begin
    key64 := 'SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate\Clients\{F3017226-FE2A-4295-8BDF-00C3A9A7E4C5}';
    key32 := 'SOFTWARE\Microsoft\EdgeUpdate\Clients\{F3017226-FE2A-4295-8BDF-00C3A9A7E4C5}'; 
    Result := False;
    if RegQueryStringValue(HKEY_LOCAL_MACHINE, key64, 'pv', Pv) then 
    begin
      if (Length(Pv) > 0) and (0 <> CompareText(Pv, '0.0.0.0')) then
        Result := True;
    end;
    if RegQueryStringValue(HKEY_LOCAL_MACHINE, key32, 'pv', Pv) then
    begin
      if (Length(Pv) > 0) and (0 <> CompareText(Pv, '0.0.0.0')) then
        Result := True;
    end;
end;

function InitializeSetup: Boolean;
begin
  Result := true
  Result := Result and IfWebView2Available();
  if not Result then
  begin
    SuppressibleMsgBox('Microsoft Edge not exists.', mbCriticalError, MB_OK, IDOK);
    Exit;
  end;
  Result := IsDotNetInstalled(net48, 0); // this is return value of InitializeSetup (Inno setup embedded function)
  if not Result then
  begin
    SuppressibleMsgBox(FmtMessage(SetupMessage(msgWinVersionTooLowError), ['.NET Framework', '4.8']), mbCriticalError, MB_OK, IDOK);
  end;
end;
